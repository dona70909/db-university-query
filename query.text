1. Contare quanti iscritti ci sono stati ogni anno
Query => SELECT COUNT(*) AS `number_students`, YEAR(`enrolment_date`) as `enrollment_year` FROM `students` GROUP BY YEAR(`enrolment_date`);

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio    
Query => SELECT COUNT(*) as `teachers_number`, `office_address` FROM `teachers` GROUP BY `office_address`;

3. Calcolare la media dei voti di ogni appello d'esame
Query => SELECT `exam_id`,AVG(`vote`) AS `avg_vote` FROM `exam_student` GROUP BY `exam_id`;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
Query => SELECT COUNT(`id`) AS `number_courses`,`department_id` FROM `degrees` GROUP BY `department_id`;



1. Selezionare tutti gli studenti nati nel 1990 (160)
Query => SELECT * FROM `students` WHERE YEAR(`date_of_birth`) = 1990 ;

2. Selezionare tutti i corsi che valgono più di 10 crediti (479)
Query => SELECT * FROM `courses` WHERE `cfu` > 10 ORDER BY `cfu` ASC ;

3. Selezionare tutti gli studenti che hanno più di 30 anni
Query => SELECT * FROM `students` WHERE (YEAR(NOW()) - YEAR(`date_of_birth`)) > 30 ORDER BY `date_of_birth` DESC ;

4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di
laurea (286)
Query => SELECT * FROM `courses` WHERE `period` = 'I SEMESTRE' AND `year` = 1;

5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del
20/06/2020 (21)
Query => SELECT * FROM `exams` WHERE `hour` > "14:00:00" AND `date` = "2020-06-20" ORDER BY `hour` ASC ;

6. Selezionare tutti i corsi di laurea magistrale (38)
Query => SELECT * FROM `degrees` WHERE `level` = "magistrale";

7. Da quanti dipartimenti è composta l'università? (12)
Query => SELECT COUNT( `id`) AS `number_dep` FROM `departments`;

8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)
Query => SELECT * FROM `teachers` WHERE ISNULL(`phone`);
